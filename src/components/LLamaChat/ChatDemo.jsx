import React, { useState } from 'react';
import LLamaChatV3 from './LLamaChatV3';
import Button from '../ui/Button';
import Card from '../ui/Card';
import './ChatDemo.css';

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞
 */
function ChatDemo() {
  const [showDemo, setShowDemo] = useState(false);
  const [demoMode, setDemoMode] = useState('mobile'); // 'mobile' | 'tablet' | 'desktop'

  const demoModes = [
    { key: 'mobile', label: 'üì± –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è', description: 'Bottom sheet —Å FAB –∫–Ω–æ–ø–∫–∞–º–∏' },
    { key: 'tablet', label: 'üì± –ü–ª–∞–Ω—à–µ—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è', description: 'Split view —Å –±–æ–∫–æ–≤—ã–º–∏ –ø–∞–Ω–µ–ª—è–º–∏' },
    { key: 'desktop', label: 'üíª –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è', description: '–ë–æ–∫–æ–≤—ã–µ –ø–∞–Ω–µ–ª–∏ —Å hover —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏' }
  ];

  return (
    <div className="chat-demo">
      <Card className="chat-demo__controls">
        <h2>üöÄ –î–µ–º–æ –Ω–æ–≤–æ–≥–æ LLamaChat</h2>
        <p>–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —É–ª—É—á—à–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —á–∞—Ç–∞ —Å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º</p>
        
        <div className="demo-modes">
          {demoModes.map(mode => (
            <button
              key={mode.key}
              className={`demo-mode-btn ${demoMode === mode.key ? 'active' : ''}`}
              onClick={() => setDemoMode(mode.key)}
            >
              <div className="demo-mode-btn__label">{mode.label}</div>
              <div className="demo-mode-btn__description">{mode.description}</div>
            </button>
          ))}
        </div>

        <div className="demo-actions">
          <Button 
            variant="primary" 
            size="lg"
            onClick={() => setShowDemo(!showDemo)}
          >
            {showDemo ? '–°–∫—Ä—ã—Ç—å –¥–µ–º–æ' : '–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ–º–æ'}
          </Button>
        </div>

        <div className="demo-features">
          <h3>‚ú® –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</h3>
          <ul>
            <li>üéØ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤</li>
            <li>üì± –ú–æ–±–∏–ª—å–Ω—ã–π bottom sheet —Å FAB –∫–Ω–æ–ø–∫–∞–º–∏</li>
            <li>üîÑ –ü–ª–∞–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã</li>
            <li>‚ôø –£–ª—É—á—à–µ–Ω–Ω–∞—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</li>
            <li>üé® –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π Material Design</li>
            <li>‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</li>
            <li>üîß –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å —Ö—É–∫–∞–º–∏</li>
            <li>üì¶ –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã</li>
          </ul>
        </div>
      </Card>

      {showDemo && (
        <div className={`chat-demo__container chat-demo__container--${demoMode}`}>
          <div className="chat-demo__overlay" onClick={() => setShowDemo(false)} />
          <div className="chat-demo__content">
            <div className="chat-demo__header">
              <h3>–î–µ–º–æ: {demoModes.find(m => m.key === demoMode)?.label}</h3>
              <button 
                className="chat-demo__close"
                onClick={() => setShowDemo(false)}
                aria-label="–ó–∞–∫—Ä—ã—Ç—å –¥–µ–º–æ"
              >
                ‚úï
              </button>
            </div>
            <div className="chat-demo__iframe">
              <LLamaChatV3 />
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default ChatDemo;
